Allgemeine Namen im Code in englisch
-----------
Funktionen klein mit _
Typen Groß
-----------
iso delta_hat snoc / cons, accepted_word, ... (als mögliche Hausaufgabe)

Kommentare überarbeiten

Die verschiedenen Beweise für die (6, davon jeweils 2
zusammengehörige) "Hin und Zurück ist Identität"-Aussagen vergleichen.

Word_Prop.v in notwendige Dateien einbinden
* beteits ins DFA_Def eingebunden.

snoc als "normale" Namensfunktion und wenn die cons verwendet werden, dann mit _cons um 
die Namen zu kürzen

Lemma delta_hat_cons_snoc (q : Q) (l : list Sigma) : andersrum

accepted_word = accepted_word_snoc

**** aus der Mail ****

4. Implementiere die Konfigurationsübergangsrelation eines det. Automaten.

5. Definiere die akzeptierte Sprache eines det. Automaten einmal über die 
  Konfigurationsübergangsrelation.
  Zeige, dass beide Definitionen 

acceptet_word (delta_hat)
acceptet_word (Conf_rel_DFA)

Frage: Sollte Conf_rel_DFA nicht besser gleich nach bool statt Type gehen?

dieselbe Sprache definieren.

conf_list w q Zustand im letzten Element der Liste = delta_hat w q

6. Definiere einen (induktiven) Typen für reguläre Ausdrücke über einem Alphabet A (Man
  braucht einzelne Zeichen aus A, Verkettung von 2 reg. Ausdrücken, Oder-Verknüpfung
  von 2 reg. Ausdrücken, Kleensche Hülle eines reg. Ausdrucks).

7. Definiere eine Funktion, die einem regulären Ausdruck über A die durch diesen
  Ausdruck definierte Sprache zuordnet.

8. Definiere die Beispielautomaten aus Einheit 2.1 der TI1-Vorlesung (den Wechselschalter
  und den "TI1" Automaten)

9. Versuche, die Beweise über die Sprachen dieser Automaten aus Abschnitt 2.1 möglichst
  genau und transparent zu formalisieren.